name: Despligue a AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Despliegue a AWS
    runs-on: ubuntu-latest
    env:
      INTERNAL_SERVICE_IP: 172.18.1.12
      INTERNAL_NETWORK_NAME: go-services
      IMAGE_NAME: go/product
      CONTAINER_NAME: go-grpc-product-svc
    steps:
    - uses: actions/checkout@v3
    - name: Configurando SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa ${{ secrets.REMOTE_SERVER_HOST }} >> ~/.ssh/known_hosts
    - name: Crear archivo .env
      run: |
        mkdir -p ./pkg/config/envs/
        echo "PORT=${{ secrets.PORT }}" >> ./pkg/config/envs/dev.env
        echo "DB_URL=${{ secrets.DB_URL }}" >> ./pkg/config/envs/dev.env
    - name: Construyendo imagen de docker
      run: docker build -t ${{ env.IMAGE_NAME }} .
    - name: Quitando contenedor e imagen
      run: |
          shopt -s expand_aliases
          alias remote-docker="ssh -C ${{ secrets.REMOTE_SERVER_USER }}@${{ secrets.REMOTE_SERVER_HOST }} docker"
          remote-docker container rm -f ${{ env.CONTAINER_NAME }}
          remote-docker image rm -f ${{ env.IMAGE_NAME }}
      continue-on-error: true
    - name: Comprimiendo & Enviando
      run: |
        shopt -s expand_aliases
        alias remote-docker="ssh -C ${{ secrets.REMOTE_SERVER_USER }}@${{ secrets.REMOTE_SERVER_HOST }} docker"
        docker save ${{ env.IMAGE_NAME }} | remote-docker load
        remote-docker container create --name=${{ env.CONTAINER_NAME }} --restart=always --net ${{ env.INTERNAL_NETWORK_NAME }} --ip ${{ env.INTERNAL_SERVICE_IP }} ${{ env.IMAGE_NAME }}
    - name: Iniciando contenedor
      run: |
        shopt -s expand_aliases
        alias remote-docker="ssh -C ${{ secrets.REMOTE_SERVER_USER }}@${{ secrets.REMOTE_SERVER_HOST }} docker"
        remote-docker start ${{ env.CONTAINER_NAME }}
